
[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = "true"

[env.sdk]
CARGO_MAKE_WORKSPACE_INCLUDE_MEMBERS = "duckscript_sdk;duckscript_cli"

[config]
main_project_member = "duckscript_cli"
additional_profiles = [
    "ci-coverage-tasks",
    "ci-all-build-tasks",
    "publish-pre-cleanup"
]

[tasks.generate-sdk-docs]
workspace = false
command = "cargo"
args = [
    "run",
    "--",
    "--eval",
    "internal::SDKDocsGen std ./docs/sdk.md"
]

[tasks.generate-readme]
script = [
'''
echo "generating readme file"
rm -f ./README.md
cat ./docs/_includes/README.md ./docs/_includes/nav.md ./docs/_includes/content.md >> README.md
sed -i 's,https://github.com/sagiegurari/duckscript/blob/master/.github,.github,g' ./README.md
'''
]

[tasks.test-scripts]
workspace = false
command = "cargo"
args = [
    "run",
    "--",
    "--eval",
    "internal::test::TestDirectory ./test"
]

[tasks.workspace-docs]
dependencies = [
    "generate-sdk-docs",
    "generate-readme"
]

[tasks.install_local]
workspace = false
cwd = "./duckscript_cli"
command = "cargo"
args = [ "install", "--force", "--path", "." ]

[tasks.zip-release-binary-for-target]
env = { "OUTPUT_NAME" = "${CARGO_MAKE_PROJECT_NAME}-v${CARGO_MAKE_PROJECT_VERSION}-${CARGO_MAKE_RELEASE_FLOW_TARGET}", "BINARY_EXECUTABLE_NAME" = "duck" }
script = [
  "mkdir ${OUTPUT_NAME}",
  "cp target/$CARGO_MAKE_RELEASE_FLOW_TARGET/release/${BINARY_EXECUTABLE_NAME} ${OUTPUT_NAME}/",
  "cp README.md LICENSE* ${OUTPUT_NAME}/",
  "zip -r ${OUTPUT_NAME}.zip ${OUTPUT_NAME}",
]
