
fn global_fn
    defined = is_defined v1
    assert ${defined}
    defined = is_defined v2
    assert ${defined}

    assert_eq ${v1} 1
    assert_eq ${v2} 2

    assert_eq ${1} 2
    assert_eq ${2} 1

    global_var = set global
end

fn <scope> scoped_fn
    defined = is_defined global_var
    assert_false ${defined}
    defined = is_defined scoped
    assert_false ${defined}

    defined = is_defined v1
    assert_false ${defined}
    defined = is_defined v2
    assert_false ${defined}

    assert_eq ${1} 1
    defined = is_defined 2
    assert_false ${defined}

    scoped = set 1
end

fn <scope> scoped_return_fn
    defined = is_defined global_var
    assert_false ${defined}
    defined = is_defined scoped
    assert_false ${defined}

    defined = is_defined v1
    assert_false ${defined}
    defined = is_defined v2
    assert_false ${defined}

    defined = is_defined 1
    assert_false ${defined}
    defined = is_defined 2
    assert_false ${defined}

    scoped = set 1

    return scoped_return_value
end

fn test_scoped_functions
    v1 = set 1
    v2 = set 2

    global_fn ${v2} ${v1}
    scoped_fn ${v1}
    output = scoped_return_fn

    defined = is_defined scoped
    assert_false ${defined}

    assert_eq ${global_var} global
    assert ${output} scoped_return_value
end

