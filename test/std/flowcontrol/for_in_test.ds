
fn test_array
    counter = set 0
    args = array a b c

    for arg in ${args}
        counter = calc ${counter} + 1
    end

    assert_eq ${counter} 3
    released = release ${args}
end

fn test_nested
    counter = set 0
    values = array 1 2 3

    for i in ${values}
        for j in ${values}
            counter = calc ${counter} + 1
        end
    end

    assert_eq ${counter} 9
    released = release ${args}
end

fn test_range
    counter = set 0
    args = range 0 10

    for i in ${args}
        for j in ${args}
            counter = calc ${counter} + 1
        end
    end

    assert_eq ${counter} 100
    released = release ${args}
end

fn test_map_keys
    handle = map

    result = map_put ${handle} key1 value1
    assert_eq ${result} true
    result = map_put ${handle} key2 value2
    assert_eq ${result} true

    keys = map_keys ${handle}
    for key in ${keys}
        valid = starts_with ${key} key
        assert ${valid}
        value = map_get ${handle} ${key}
        valid = starts_with ${value} value
        assert ${valid}
    end

    release ${handle}
    release ${keys}
end
